const express = require("express");
const router = express.Router();
const pool = require("../models/userModel"); // –î–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ
const authenticateToken = require("../middleware/authenticateToken"); // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞

router.get("/", authenticateToken, async (req, res) => {
  const userId = req.user.id;
  console.log("üîπ –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", userId);

  try {
    const result = await pool.query(
      `SELECT 
        currency, 
        amount, 
        COALESCE(amount_btc, 0) AS amount_btc
      FROM balances WHERE user_id = $1`,
      [userId]
    );

    if (result.rows.length === 0) {
      return res.status(404).json({ message: "–ë–∞–ª–∞–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    const balances = {};
    result.rows.forEach(({ currency, amount, amount_btc }) => {
      balances[currency] = currency === "BTC" ? amount_btc : amount;
    });

    console.log("üéØ –ë–∞–ª–∞–Ω—Å, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç—É:", balances);
    res.json(balances);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

module.exports = router;
