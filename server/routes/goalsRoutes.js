const express = require("express");
const router = express.Router();
const pool = require("../models/userModel");
const {
  getGoals,
  addGoal,
  updateGoal,
  deleteGoal,
  addBalanceToGoal,
  withdrawFromGoal,
  withdrawFullGoal,
  getGoalsHistory,
  getGoalById,
} = require("../controllers/goalsController");
const authenticateToken = require("../middleware/authenticateToken");

router.get("/", authenticateToken, getGoals);
router.get("/history", authenticateToken, getGoalsHistory);
router.get("/history/:goalId", authenticateToken, async (req, res) => {
  const { goalId } = req.params;
  const userId = req.user.id;

  try {
    const result = await pool.query(
      "SELECT * FROM goals_history WHERE goal_id = $1 AND user_id = $2",
      [goalId, userId]
    );

    if (result.rows.length === 0) {
      return res.status(404).json({ message: "–¶–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏." });
    }

    res.json(result.rows[0]);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–ª–∏ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
});

router.get(
  "/history/:goalId/transactions",
  authenticateToken,
  async (req, res) => {
    const { goalId } = req.params;
    const userId = req.user.id;

    try {
      console.log(
        `üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è goalId: ${goalId}, userId: ${userId}`
      );

      // ‚úÖ 1Ô∏è‚É£ –ù–∞—Ö–æ–¥–∏–º goal_history_id
      const historyGoal = await pool.query(
        "SELECT id FROM goals_history WHERE goal_id = $1 AND user_id = $2",
        [goalId, userId]
      );

      if (historyGoal.rows.length === 0) {
        console.log("‚ö† –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Ü–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        return res
          .status(404)
          .json({ message: "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Ü–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞." });
      }

      const historyGoalId = historyGoal.rows[0].id;
      console.log(`üìú –ù–∞–π–¥–µ–Ω goal_history_id: ${historyGoalId}`);

      // ‚úÖ 2Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ goals_history_transactions
      const result = await pool.query(
        "SELECT * FROM goals_history_transactions WHERE goal_history_id = $1 AND user_id = $2 ORDER BY date DESC",
        [historyGoalId, userId]
      );

      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${result.rows.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.`);

      res.json(result.rows);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:", error);
      res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }
);

router.post("/", authenticateToken, addGoal);
router.put("/:id", authenticateToken, updateGoal);
router.delete("/:id", authenticateToken, deleteGoal);
router.post("/:id/add-balance", authenticateToken, addBalanceToGoal);
router.post("/:id/withdraw", authenticateToken, withdrawFromGoal);

router.post("/:id/withdraw-balance", authenticateToken, withdrawFromGoal);

router.get("/:id", authenticateToken, getGoalById);

router.post("/:id/withdraw-full", authenticateToken, withdrawFullGoal);

module.exports = router;
