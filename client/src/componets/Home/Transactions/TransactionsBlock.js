// üìå –§–∞–π–ª: client/src/components/Home/Transactions/TransactionsBlock.js

import React, { useState, useEffect } from "react";
import { fetchTransactions } from "../../../utils/api";
import "../../../styles/HomePage.css";
import "../../../styles/goal.css";
import "../../../styles/bootstrap/css/bootstrap.min.css";

const TransactionsBlock = () => {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadTransactions = async () => {
      try {
        const data = await fetchTransactions();
        setTransactions(data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", error);
      } finally {
        setLoading(false);
      }
    };
    loadTransactions();
  }, []);

  return (
    <div className="transactions-block mt-4">
      <h2 className="text-light">üìú –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h2>
      {loading ? (
        <p className="text-light">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : transactions.length === 0 ? (
        <p className="text-light">–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</p>
      ) : (
        <table className="table table-dark table-striped mt-3">
          <thead>
            <tr>
              <th>–î–∞—Ç–∞</th>
              <th>–°—É–º–º–∞</th>
              <th>–û—Ç–∫—É–¥–∞</th>
              <th>–ö—É–¥–∞</th>
              <th>–¢–∏–ø</th>
            </tr>
          </thead>
          <tbody>
            {transactions.map((txn) => (
              <tr key={txn.id}>
                <td>{new Date(txn.date).toLocaleString()}</td>
                <td>{txn.amount}</td>
                <td>{txn.from_currency}</td>
                <td>{txn.to_currency}</td>
                <td>{txn.type}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default TransactionsBlock;
